let Joi,CustomErrorHandler,User;_5b1‍.x([["default",()=>_5b1‍.o]]);_5b1‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);_5b1‍.w("../../services/CustomErrorHandler.js",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);_5b1‍.w("../../models/User.js",[["default",["User"],function(v){User=v}]]); 



const register = async (req, res, next) => {
    try {
       
        const registerSchema = Joi.object({
            name: Joi.string().min(3).max(30).required(),
            email: Joi.string().email().required(),
            password: Joi.string().pattern(new RegExp('^[a-zA-Z0-9]{4,8}$')).required(),
            repeat_password: Joi.ref('password')
        });

        const {error} = registerSchema.validate(req.body);

        if(error){
            return next(error);
        }

        const exist = await User.exist({email: req.body.email});
        if(exist){
            return next(CustomErrorHandler.alreadyExist('This email is already exist'));
        }


        res.json({ msg: "Hello from Express" });

    } catch (error) {
        next(error);
    }
}

_5b1‍.d(register);
